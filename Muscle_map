<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>MuscleMap</title>
  <link rel="stylesheet" href="css/style.css" />
</head>
<body>
  <div class="app-container">
    <header>
      <h1>MuscleMap</h1>
      <input type="search" id="searchBar" placeholder="Search exercises..." autocomplete="off" />
    </header>

    <main>
      <section class="exercise-list" id="exerciseList"></section>

      <section class="diagram-container">
        <div id="svgContainer"></div>
        <div id="exerciseDesc" class="exercise-desc">Select an exercise to see details</div>
      </section>
    </main>
  </div>

  <script src="js/app.js"></script>
</body>
</html>
/* Dark mode base */
body {
  background-color: #121212;
  color: #eee;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
  padding: 0;
  height: 100vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.app-container {
  max-width: 900px;
  margin: auto;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

header {
  padding: 1rem;
  background-color: #1f1f1f;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

header h1 {
  margin: 0;
  font-weight: 700;
  font-size: 1.8rem;
}

#searchBar {
  padding: 0.5rem;
  font-size: 1rem;
  border: none;
  border-radius: 4px;
  background-color: #2c2c2c;
  color: #eee;
}

main {
  flex: 1;
  display: flex;
  overflow: hidden;
  gap: 1rem;
  padding: 1rem;
}

.exercise-list {
  flex: 1;
  overflow-y: auto;
  background-color: #1e1e1e;
  border-radius: 8px;
  padding: 0.5rem;
}

.exercise-card {
  padding: 0.7rem;
  margin-bottom: 0.5rem;
  background-color: #292929;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.exercise-card:hover,
.exercise-card.active {
  background-color: #e53935;
  color: #fff;
}

.diagram-container {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  justify-content: flex-start;
}

#svgContainer {
  width: 300px;
  height: 600px;
  user-select: none;
}

.exercise-desc {
  max-width: 300px;
  font-size: 0.9rem;
  line-height: 1.3;
  color: #ccc;
  text-align: center;
}

/* Muscle highlight styles from SVG */
.muscle {
  fill: #444;
  transition: fill 0.3s;
}

.highlight {
  fill: #e53935 !important;
}
const exerciseListEl = document.getElementById('exerciseList');
const searchBar = document.getElementById('searchBar');
const svgContainer = document.getElementById('svgContainer');
const exerciseDesc = document.getElementById('exerciseDesc');

let exercises = [];
let selectedExercise = null;
let svgDoc = null;

async function loadExercises() {
  const res = await fetch('data/exercises.json');
  exercises = await res.json();
  renderExerciseList(exercises);
}

function renderExerciseList(list) {
  exerciseListEl.innerHTML = '';
  if (list.length === 0) {
    exerciseListEl.innerHTML = '<p>No exercises found</p>';
    return;
  }

  list.forEach((ex, i) => {
    const card = document.createElement('div');
    card.classList.add('exercise-card');
    card.textContent = ex.name;
    card.tabIndex = 0;
    card.onclick = () => selectExercise(i);
    card.onkeydown = (e) => {
      if (e.key === 'Enter') selectExercise(i);
    };
    if (selectedExercise === i) card.classList.add('active');
    exerciseListEl.appendChild(card);
  });
}

function selectExercise(index) {
  selectedExercise = index;
  renderExerciseList(exercises.filter(ex =>
    ex.name.toLowerCase().includes(searchBar.value.toLowerCase())
  ));
  const ex = exercises[index];
  exerciseDesc.textContent = ex.description;
  highlightMuscles(ex.muscles);
}

async function loadSVG() {
  const res = await fetch('assets/svg/front_male.svg');
  const svgText = await res.text();
  svgContainer.innerHTML = svgText;
  svgDoc = svgContainer.querySelector('svg');
}

function highlightMuscles(muscleIDs) {
  if (!svgDoc) return;

  // Clear previous highlights
  svgDoc.querySelectorAll('.muscle').forEach(el => {
    el.classList.remove('highlight');
  });

  // Add highlight to selected muscles
  muscleIDs.forEach(id => {
    const muscleEl = svgDoc.getElementById(id);
    if (muscleEl) {
      muscleEl.classList.add('highlight');
    }
  });
}

searchBar.addEventListener('input', () => {
  const query = searchBar.value.toLowerCase();
  const filtered = exercises.filter(ex => ex.name.toLowerCase().includes(query));
  renderExerciseList(filtered);
});

async function init() {
  await loadSVG();
  await loadExercises();
}

init();
[
  {
    "name": "Squat",
    "description": "A compound exercise targeting the lower body.",
    "muscles": ["quads", "quads2", "glutes"]
  },
  {
    "name": "Push-up",
    "description": "A bodyweight exercise targeting the upper body.",
    "muscles": ["chest", "biceps", "biceps2"]
  }
]
<svg width="300" height="600" viewBox="0 0 300 600" xmlns="http://www.w3.org/2000/svg">
  <style>
    .muscle { fill: #444; transition: fill 0.3s; }
    .highlight { fill: #e53935 !important; }
  </style>

  <!-- Quads -->
  <rect id="quads" class="muscle" x="120" y="400" width="20" height="80"/>
  <rect id="quads2" class="muscle" x="160" y="400" width="20" height="80"/>

  <!-- Glutes -->
  <rect id="glutes" class="muscle" x="120" y="360" width="60" height="30"/>

  <!-- Biceps -->
  <rect id="biceps" class="muscle" x="80" y="250" width="20" height="60"/>
  <rect id="biceps2" class="muscle" x="200" y="250" width="20" height="60"/>

  <!-- Chest -->
  <rect id="chest" class="muscle" x="110" y="200" width="80" height="40"/>
</svg>
